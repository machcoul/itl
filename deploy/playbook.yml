- name : tasks on control machine
  hosts : localhost
  connection : local
  vars_files :
    - vars.yml
  roles :
    - push
  tasks :
    - name : check ssh-pass package
      package :
        name : sshpass
        state : present
      tags :
        - init

- name : tasks on hosts
  hosts : all
  vars_files :
    - vars.yml
  tasks :
    - tags :
      - init
      block :
      - name : Uninstall old versions
        apt :
          name : "{{item}}"
          state : absent
        with_items :
          - docker
          - docker-engine
          - docker.io

      - name: Update the apt package index
        apt:
          update_cache: yes
        changed_when: False

      - name : Install packages to allow apt to use a repository over HTTPS
        apt :
          name : "{{item}}"
          state : present
        with_items :
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common

      - name : Add Dockerâ€™s official GPG key
        apt_key:
          id: 0EBFCD88
          url: https://download.docker.com/linux/debian/gpg # $ curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg | sudo apt-key add -
          state: present

      - name : Set up the stable repository
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/debian jessie stable
          state: present

      - name: Update the apt package index and install the latest version of Docker CE
        apt:
          name : docker-ce
          state : present
          update_cache: yes

      - name : Uninstall python packages
        apt :
          name : "{{item}}"
          state : absent
        with_items :
          - python-pip
          - python-requests

      - name: Install python-setuptools package
        apt:
          name : python-setuptools
          state : present

      - name : Install pip package
        easy_install:
          name: pip
          state: latest

      - name : Install Multi-container orchestration for Docker
        pip:
          name: docker-compose
          # version : 1.9.0

    - stat: path="{{dest}}/compose/docker-compose.yml"
      register: compose_file
      tags :
        - refresh
        - pull
        - down
        - restart

    - docker_service:
        project_src: "{{dest}}/compose"
        state: absent
      when: compose_file.stat.exists
      ignore_errors: True
      tags :
        - refresh
        - pull
        - down
        - restart

    - git:
        repo: "https://{{repo}}"
        dest: "{{dest}}"
        force : yes
      tags :
        - refresh
        - pull

    - name: Remove docker volume
      docker_volume:
        name: "{{item}}"
        state: absent
      tags :
        - refresh
      with_items :
        - compose_db-data
        - compose_pg-admin

    - docker_service:
        project_src: "{{dest}}/compose"
        state: present
      when: compose_file.stat.exists
      ignore_errors: True
      tags :
        - refresh
        - pull
        - up
        - restart
